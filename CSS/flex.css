
/* Flex 是 Flexible Box 的缩写，意为"弹性布局"，用来为盒状模型提供最大的灵活性。 */

.body {
	display: flex
}

/* 行内元素也可以使用 Flex 布局。 */
.box {
	display: inline-flex
}



/* 项目排序方向：flex-direction */
.box {
  flex-direction: row;				/* row（默认值）：	主轴为水平方向，起点在左端。 	*/
  flex-direction: row-reverse;		/* row-reverse：	主轴为水平方向，起点在右端。 	*/
  flex-direction: column;			/* column：			主轴为垂直方向，起点在上沿。	*/
  flex-direction: column-reverse;	/* column-reverse：	主轴为垂直方向，起点在下沿。 	*/
}



/* 轴线排序溢出：flex-wrap */
.box{
  flex-wrap: nowrap;
  flex-wrap: wrap;
  flex-wrap: wrap-reverse;
}
/* nowrap（默认值）：	不换行 				*/
/* wrap：				换行，第一行在上 	*/
/* warp-reverse：		换行，第一行在下 	*/



/* flex-flow */
/* flex-flow属性是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap。 */
.box {
  flex-flow: <flex-direction> || <flex-wrap>;
}



/* 主轴对齐方式：justify-content */
.box {
  justify-content: flex-start;
  justify-content: flex-end;
  justify-content: center;
  justify-content: space-between;
  justify-content: space-around;
}
/* flex-start（默认值）：	左对齐 */
/* flex-end：				右对齐 */
/* center： 				居中 */
/* space-between：			两端对齐，项目之间的间隔都相等。 */
/* space-around：			每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。 */



/* 交叉轴对齐方式：align-items */
.box {
  align-items: flex-start;
  align-items: flex-end;
  align-items: center;
  align-items: baseline;
  align-items: stretch;
}
/* flex-start：交叉轴的起点对齐。 */
/* flex-end：交叉轴的终点对齐。 */
/* center：交叉轴的中点对齐。 */
/* baseline: 项目的第一行文字的基线对齐。 */
/* stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。 */


/* 多根轴线的对齐方式：align-content */
.box {
  align-content: flex-start;
  align-content: flex-end;
  align-content: center;
  align-content: space-between;
  align-content: space-around;
  align-content: stretch;
}
/* flex-start：与交叉轴的起点对齐。 */
/* flex-end：与交叉轴的终点对齐。 */
/* center：与交叉轴的中点对齐。 */
/* space-between：与交叉轴两端对齐，轴线之间的间隔平均分布。 */
/* space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。 */
/* stretch（默认值）：轴线占满整个交叉轴。 */

/* 如果项目只有一根轴线，该属性不起作用 */



/**
 * 以下6个属性设置在项目上。
 *  order
 *  flex-grow
 *  flex-shrink
 *  flex-basis
 *  flex
 *  align-self
*/


/* 定义放大比例：flex-grow */
.item {
  flex-grow: <number>;
}
/* 默认为0，即如果存在剩余空间，也不放大。 */
/* 如果所有项目的flex-grow属性都为1，则它们将等分剩余空间（如果有的话）。 */
/* 如果一个项目的flex-grow属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍。 
   即：假设将总长度分为n分，为一的则占一份，为二的则占两份，将所有分数合起来则为总长度*/


.item {
  flex-shrink: <number>;
}
/* 默认为1，即如果空间不足，该项目将缩小。 */
/* 如果所有项目的flex-shrink属性都为1，当空间不足时，都将等比例缩小。 */
/* 如果一个项目的flex-shrink属性为0，其他项目都为1，则空间不足时，前者不缩小。 */
/* 负值对该属性无效。 */


/* 分配多余空间之前，项目占据的主轴空间（main size）：flex-basis */
.item {
  flex-basis: <length> | auto;
}
/* 浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小。 */
/* 它可以设为跟width或height属性一样的值（比如350px），则项目将占据固定空间。 */


/* flex */
/* flex属性是flex-grow, flex-shrink 和 flex-basis的简写 */
.item {
  flex: none | <' flex-grow '> <' flex-shrink >'? || <' flex-basis '>;
}
/* 默认值为0 1 auto。后两个属性可选。 */
/* 该属性有两个快捷值：auto (1 1 auto) 和 none (0 0 auto)。 */
/* 建议优先使用这个属性，而不是单独写三个分离的属性，因为浏览器会推算相关值。 */


/* 允许单个项目有与其他项目不一样的对齐方式： align-self */
.item {
  align-self: auto;
  align-self: flex-start;
  align-self: flex-end;
  align-self: center;
  align-self: baseline;
  align-self: stretch;
}
/* flex-start：交叉轴的起点对齐。 */
/* flex-end：交叉轴的终点对齐。 */
/* center：交叉轴的中点对齐。 */
/* baseline: 项目的第一行文字的基线对齐。 */
/* stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。 */

/* 可覆盖align-items属性。 */
/* 默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch。 */
/* 该属性可能取6个值，除了auto，其他都与align-items属性完全一致。 */